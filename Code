import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;


public class TicTacToe {
    protected char[] board;
    protected char userMarker;
    protected char aiMarker;
    protected char winner;
    protected char currentMarker;


    public TicTacToe(char playerToken,char aiMarker){
        userMarker=playerToken;
        this.aiMarker=aiMarker;
        this.winner='-';
        this.board=setBoard();
        this.currentMarker=userMarker;
    }
    public static char[] setBoard(){
        char[] board=new char[9];
        for(int i=0;i<9;i++){
            board[i]='-';
        }
        return board;
    }
    public boolean playTurn(int spot){
        boolean isValid= withinRange(spot) && !isSpotTaken(spot);
        if(isValid){
            board[spot-1]=currentMarker;
            currentMarker=(currentMarker==userMarker) ? aiMarker: userMarker;
        }
        return isValid;
    }
    public boolean withinRange(int number){
        return number>0 && number<board.length+1;
    }
    public boolean isSpotTaken(int number){
        return board[number-1]!='-';
    }
    public void printBoard(){
        System.out.println();
        for(int i=0;i<board.length;i++){
            if(i%3==0 && i!=0){
                System.out.println();
                System.out.println("---------------");
            }
            System.out.print(" | "+board[i]);
        }
        System.out.println();
    }
    public static void printIndexBoard(){
        System.out.println();
        for(int i=0;i<9;i++){
            if(i%3==0 && i!=0){
                System.out.println();
                System.out.println("---------------");
            }
            System.out.print(" | "+(i+1));
        }
        System.out.println();
    }
    public boolean isThereAWinner(){
        boolean diagonalAndMiddle= (rightD() || leftD() || middleRow() || secondCol()) && board[4] !='-';
        boolean topAndFirst= (topRow() || firstCol()) && board[0]!='-';
        boolean bottomAndThird= (bottomRow() || thirdCol()) && board[8]!='-';
        if(diagonalAndMiddle) this.winner=board[4];
        else if(topAndFirst) this.winner=board[0];
        else if(bottomAndThird) this.winner=board[8];
        return diagonalAndMiddle||topAndFirst||bottomAndThird;
    }
    public boolean topRow(){
        return board[0]==board[1] && board[1]==board[2];
    }
    public boolean middleRow(){
        return board[3]==board[4] && board[4]==board[5];
    }
    public boolean bottomRow(){
        return board[6]==board[7] && board[7]==board[8];
    }
    public boolean firstCol(){
        return board[0]==board[3] && board[3]==board[6];
    }
    public boolean secondCol(){
        return board[1]==board[4] && board[4]==board[7];
    }
    public boolean thirdCol(){
        return board[2]==board[5] && board[5]==board[8];
    }
    public boolean rightD(){
        return board[0]==board[4] && board[4]==board[8];
    }
    public boolean leftD(){
        return board[2]==board[4] && board[4]==board[6];
    }
    public boolean isBoardFilled(){
        for(int i=0;i<board.length;i++){
            if(board[i]=='-') return false;
        }
        return true;
    }
    public String gameOver(){
        boolean flag=isThereAWinner();
        if(flag)
            return "Winner is "+this.winner;
        else if (isBoardFilled())
            return "No Winner , Draw!";
        else
            return "notOver";
    }
}
public class AI {
    public int pickSpot(TicTacToe game){
        ArrayList<Integer> choices=new ArrayList();
        for(int i=0;i<9;i++){
            if(game.board[i]=='-') choices.add(i+1);
        }
        Random rand=new Random();
        int choice=choices.get(Math.abs(rand.nextInt() % choices.size()));
        return choice;
    }
}
public class Main {

    public static void main(String[] args) {
	// write your code here
        Scanner sc=new Scanner(System.in);
        boolean startGame=true;
        while(startGame){
            System.out.println("Welcome! To start this game choose your and opponents character: ");
            System.out.println();
            System.out.println("Enter a character representing you: ");
            char player=sc.next().charAt(0);
            System.out.println("Enter a character representing you opponent: ");
            char opponent=sc.next().charAt(0);
            TicTacToe game=new TicTacToe(player,opponent);
            AI ai=new AI();

            //Setting the game up
            System.out.println();
            System.out.println("Starting the game,Enter the number where you want to put your Token");
            TicTacToe.printIndexBoard();
            System.out.println();

            //Start
            while(game.gameOver().equals("notOver")){
                //User Turn
                if(game.currentMarker==game.userMarker){
                    System.out.println("Your turn ,Enter a spot number");
                    int spot=sc.nextInt();
                    while(!game.playTurn(spot)){
                        System.out.println("Invalid Entry, Try again");
                        spot=sc.nextInt();
                    }
                    System.out.println();
                }
                // AI Turn
                else{
                    System.out.println("My turn!");
                    int aiSpot=ai.pickSpot(game);
                    game.playTurn(aiSpot);
                    System.out.println("I picked "+aiSpot+".");
                }
                System.out.println();
                game.printBoard();
            }
            System.out.println(game.gameOver());
            System.out.println();
            //want to play again
            System.out.println("Press Y if you want to play again,If not press any other key");
            char response=sc.next().charAt(0);
            startGame=(response=='Y');
            System.out.println();
        }
    }
}
